// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id        Int        @id @default(autoincrement())
  username  String
  email     String     @unique
  password  String
  avatar    String?
  banner    String?
  bio       String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    Boolean
  posts     Post[]
  comments  Comment[]
  followers Follower[] @relation("Followed")
  following Follower[] @relation("Follower")
  reactions Reaction[]
}

// Post model
model Post {
  id             String     @id @default(cuid())
  content        String
  image          String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  user           User       @relation(fields: [userId], references: [id])
  userId         Int
  comments       Comment[]
  reactions      Reaction[]
  originalPost   Post?      @relation("Shares", fields: [originalPostId], references: [id])
  originalPostId String? // ID de la publicaci√≥n original si es compartida
  sharedPosts    Post[]     @relation("Shares")
}

// Comment model
model Comment {
  id        String     @id @default(cuid())
  content   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  post      Post       @relation(fields: [postId], references: [id])
  postId    String
  reactions Reaction[]
}

// Follower model
model Follower {
  id         String   @id @default(cuid())
  follower   User     @relation("Follower", fields: [followerId], references: [id])
  followerId Int
  followed   User     @relation("Followed", fields: [followedId], references: [id])
  followedId Int
  createdAt  DateTime @default(now())

  @@unique([followerId, followedId])
}

// Reaction model
model Reaction {
  id        String   @id @default(cuid())
  type      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId String?
}
